#     Create a function named organize_contacts that processes a list of contact dictionaries to create a clean contact database.

# Each contact dictionary in the input list has these keys:

# name: The person's name
# email: The person's email address
# phone: The person's phone number
# Your function should:

# Remove duplicate contacts (contacts with the same email or phone number)
# Standardize all emails to lowercase
# Filter out contacts with invalid email addresses
# Filter out contacts with invalid phone numbers
# Return a list of cleaned contact dictionaries
# Validation rules:

# Valid email: Must contain '@' and '.', and must not have spaces
# Valid phone: Must contain exactly 10 digits (ignore non-digit characters like dashes or parentheses)
# For cleaning phone numbers, you should use Python's str.isdigit() method to extract only the numeric digits from phone numbers. 
This method returns True if a character is a digit (0-9) and False otherwise, making it perfect for filtering out non-digit characters.

# my solution 

def organize_contacts(contact_list):
    lista_de_emails = []
    lista_de_nomes = []
    # aqui vamos guardar os nomes no dicionário 
    contact_list_s_repetidos = []
    for dicionario in contact_list :
           lista_de_keys = dicionario.keys()
           for key in lista_de_keys:
           # vamos percorrer a lista de chaves de cada dicionário 
                if key == "email" : 
                    if key["email"] not in lista_de_emails : 
                        lista_de_emails.append("email")
                    else : 
                       # if key["email"] in lista_de_emails :
                       # caso o email já esteja na lista de emails vamos remover esse diconário 
                       contact_list.remove(dicionario)
                elif key == "name" :
                     if key["name"] not in lista_de_nomes : 
                        lista_de_nomes.append("email")
                    else : 
                       # if key["nomes"] in lista_de_nomes :
                       # caso o nome já esteja na lista de nomes vamos remover esse diconário 
                       contact_list.remove(dicionario) 
                    ########
                else : 
                    pass 

                    # por hora se não for nem nome nem email vamos fazer nada 
                            
        # para um dicionário numa lista de dicionários 

    pass
